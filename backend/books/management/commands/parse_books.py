from django.core.management.base import BaseCommand
import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin
from books.models import Book


class Command(BaseCommand):
    help = '–ü–∞—Ä—Å–∏–Ω–≥ –∫–Ω–∏–≥ –∑ —Å–∞–π—Ç—É books.toscrape.com –∑ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è–º —ñ—Å–Ω—É—é—á–∏—Ö –∑–∞–ø–∏—Å—ñ–≤'

    def handle(self, *args, **kwargs):
        base_url = "https://books.toscrape.com/"
        headers = {
            'User-Agent': (
                'Mozilla/5.0 (Windows NT 10.0; Win64; x64) '
                'AppleWebKit/537.36 (KHTML, like Gecko) '
                'Chrome/113.0.0.0 Safari/537.36'
            )
        }

        # –ü–∞—Ä—Å–∏–º–æ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
        response = requests.get(base_url, headers=headers)
        if response.status_code != 200:
            self.stdout.write(self.style.ERROR(f"–°—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}"))
            return

        soup = BeautifulSoup(response.text, 'html.parser')

        book_items = soup.select('article.product_pod')
        if not book_items:
            self.stdout.write(self.style.WARNING("–ö–Ω–∏–≥–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"))
            return

        for book in book_items:
            title = book.h3.a['title'].strip()

            # URL –∫–∞—Ä—Ç–∏–Ω–∫–∏ (–≤—ñ–¥–Ω–æ—Å–Ω–∏–π)
            image_relative_url = book.select_one('img')['src']
            # –ê–±—Å–æ–ª—é—Ç–Ω–∏–π URL –∫–∞—Ä—Ç–∏–Ω–∫–∏
            image_url = urljoin(base_url, image_relative_url)

            # –ñ–∞–Ω—Ä –±–µ—Ä–µ–º–æ –∑ –∫–ª–∞—Å—É article –∞–±–æ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ –∑ —ñ–Ω—à–æ—ó —á–∞—Å—Ç–∏–Ω–∏ - –Ω–∞ books.toscrape.com –Ω–µ–º–∞—î –ø—Ä—è–º–æ–≥–æ –∂–∞–Ω—Ä—É —Ç—É—Ç, –º–æ–∂–Ω–∞ —Å–ø—Ä–æ–±—É–≤–∞—Ç–∏ –≤–∑—è—Ç–∏ –∑ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –∫–Ω–∏–≥–∏
            # –î–ª—è –ø—Ä–∏–∫–ª–∞–¥—É, –≤—ñ–∑—å–º–µ–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∫–Ω–∏–≥–∏ (–ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–∞–ø–∞—Ä—Å–∏—Ç–∏ —Å—Ç–æ—Ä—ñ–Ω–∫—É –¥–µ—Ç–∞–ª—å–Ω–æ)
            book_detail_relative_url = book.h3.a['href']
            book_detail_url = urljoin(base_url + "catalogue/", book_detail_relative_url)

            # –í—ñ–¥–∫—Ä–∏–≤–∞—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –∫–Ω–∏–≥–∏, —â–æ–± –≤–∑—è—Ç–∏ —Ü—ñ–Ω—É —ñ –∂–∞–Ω—Ä (–∫–∞—Ç–µ–≥–æ—Ä—ñ—é)
            detail_resp = requests.get(book_detail_url, headers=headers)
            if detail_resp.status_code != 200:
                self.stdout.write(self.style.WARNING(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ –∫–Ω–∏–≥–∏ {title}"))
                continue

            detail_soup = BeautifulSoup(detail_resp.text, 'html.parser')

            # –¶—ñ–Ω–∞
            price_str = detail_soup.select_one('p.price_color')
            price = price_str.text.strip() if price_str else ''

            # –ñ–∞–Ω—Ä (–∫–∞—Ç–µ–≥–æ—Ä—ñ—è) - —É breadcrumbs –¥—Ä—É–≥–∞ –ø–æ–∑–∏—Ü—ñ—è –ø—ñ—Å–ª—è "Home"
            breadcrumbs = detail_soup.select('ul.breadcrumb li a')
            genre = breadcrumbs[2].text.strip() if len(breadcrumbs) > 2 else ''

            # –û–Ω–æ–≤–ª–µ–Ω–Ω—è –∞–±–æ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–∏–≥–∏ –≤ –±–∞–∑—ñ
            book_obj, created = Book.objects.update_or_create(
                title=title,
                defaults={
                    'image_url': image_url,
                    'genre': genre,
                    'price': price,
                }
            )
            if created:
                self.stdout.write(self.style.SUCCESS(f"‚úÖ –î–æ–¥–∞–Ω–æ: {title}"))
            else:
                self.stdout.write(self.style.SUCCESS(f"üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ: {title}"))
