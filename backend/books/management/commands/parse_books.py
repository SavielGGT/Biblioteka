from django.core.management.base import BaseCommand
import requests
from bs4 import BeautifulSoup
from books.models import Book
from urllib.parse import urljoin


class Command(BaseCommand):
    help = '–ü–∞—Ä—Å–∏–Ω–≥ –Ω–∞–∑–≤, –∑–æ–±—Ä–∞–∂–µ–Ω—å, –∂–∞–Ω—Ä—É —Ç–∞ —Ü—ñ–Ω–∏ –∫–Ω–∏–≥ –∑ –≥–æ–ª–æ–≤–Ω–æ—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ books.toscrape.com'

    def handle(self, *args, **kwargs):
        base_url = "https://books.toscrape.com/"
        headers = {
            'User-Agent': (
                'Mozilla/5.0 (Windows NT 10.0; Win64; x64) '
                'AppleWebKit/537.36 (KHTML, like Gecko) '
                'Chrome/113.0.0.0 Safari/537.36'
            )
        }

        response = requests.get(base_url, headers=headers)
        if response.status_code != 200:
            self.stdout.write(self.style.ERROR(f"–°—Ç–æ—Ä—ñ–Ω–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}"))
            return

        soup = BeautifulSoup(response.text, 'html.parser')
        book_items = soup.select('article.product_pod')

        if not book_items:
            self.stdout.write(self.style.WARNING("–ö–Ω–∏–≥–∏ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"))
            return

        for book in book_items:
            title = book.h3.a['title'].strip()

            # –í–∏—Ç—è–≥—É—î–º–æ –≤—ñ–¥–Ω–æ—Å–Ω–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —Ç–∞ –æ—á–∏—â—É—î–º–æ –≤—ñ–¥ '../'
            image_relative_url = book.select_one('img')['src'].strip()
            while image_relative_url.startswith('../'):
                image_relative_url = image_relative_url[3:]
            image_url = urljoin(base_url, image_relative_url)

            # –í–∏—Ç—è–≥—É—î–º–æ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¥–µ—Ç–∞–ª—å–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
            detail_relative_url = book.h3.a['href']
            detail_url = urljoin(base_url, detail_relative_url)

            genre = ''
            price = None

            # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –¥–µ—Ç–∞–ª—å–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –∫–Ω–∏–≥–∏ –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∂–∞–Ω—Ä—É —Ç–∞ —Ü—ñ–Ω–∏
            detail_resp = requests.get(detail_url, headers=headers)
            if detail_resp.status_code == 200:
                detail_soup = BeautifulSoup(detail_resp.text, 'html.parser')

                # –ñ–∞–Ω—Ä —É —Ö–ª—ñ–±–Ω–∏—Ö –∫—Ä–∏—Ö—Ç–∞—Ö ‚Äî —Ç—Ä–µ—Ç—ñ–π <li> (—ñ–Ω–¥–µ–∫—Å 2)
                breadcrumb_items = detail_soup.select('ul.breadcrumb li a')
                if len(breadcrumb_items) >= 3:
                    genre = breadcrumb_items[2].text.strip()

                # –¶—ñ–Ω–∞ - –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ —É <p class="price_color">
                price_tag = detail_soup.select_one('p.price_color')
                if price_tag:
                    # –í–∏–¥–∞–ª—è—î–º–æ —Å–∏–º–≤–æ–ª –≤–∞–ª—é—Ç–∏ —Ç–∞ –∫–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –≤ float
                    price_str = price_tag.text.strip()
                    # –ü—Ä–∏–∫–ª–∞–¥: '¬£53.74' -> 53.74
                    price = float(price_str.lstrip('¬£'))
            else:
                self.stdout.write(self.style.WARNING(f"–ù–µ –≤–¥–∞–ª–æ—Å—è –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ –¥–µ—Ç–∞–ª—ñ –¥–ª—è –∫–Ω–∏–≥–∏: {title}"))

            # –û–Ω–æ–≤–ª—é—î–º–æ –∞–±–æ —Å—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–∏–≥—É —É –±–∞–∑—ñ
            book_obj, created = Book.objects.update_or_create(
                title=title,
                defaults={
                    'author': '',
                    'genre': genre,
                    'year': None,   # —Ä–æ–∫—É –Ω–µ–º–∞ –Ω–∞ —Å–∞–π—Ç—ñ, –∑–∞–ª–∏—à–∞—î–º–æ None
                    'price': price,
                    'rating': None,
                    'description': '',
                    'image_url': image_url,
                }
            )

            if created:
                self.stdout.write(self.style.SUCCESS(f"‚úÖ –î–æ–¥–∞–Ω–æ: {title} (–ñ–∞–Ω—Ä: {genre}, –¶—ñ–Ω–∞: {price})"))
            else:
                self.stdout.write(self.style.SUCCESS(f"üîÑ –û–Ω–æ–≤–ª–µ–Ω–æ: {title} (–ñ–∞–Ω—Ä: {genre}, –¶—ñ–Ω–∞: {price})"))
